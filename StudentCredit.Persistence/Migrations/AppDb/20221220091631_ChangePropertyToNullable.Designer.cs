// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentCredit.Persistence;

#nullable disable

namespace StudentCredit.Persistence.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221220091631_ChangePropertyToNullable")]
    partial class ChangePropertyToNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentCredit.Data.Applications.ApplicationOne.ApplicationOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AdjournDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("adjourndate");

                    b.Property<int?>("AdjournPeriod")
                        .HasColumnType("integer")
                        .HasColumnName("adjournperiod");

                    b.Property<int?>("AdjournTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("adjourntypeid");

                    b.Property<int>("ApplicationOneTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("applicationonetypeid");

                    b.Property<string>("BULSTAT")
                        .HasColumnType("text")
                        .HasColumnName("bulstat");

                    b.Property<string>("BankName")
                        .HasColumnType("text")
                        .HasColumnName("bankname");

                    b.Property<DateTime>("BlankDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("blankdate");

                    b.Property<string>("CancelCondition")
                        .HasColumnType("text")
                        .HasColumnName("cancelcondition");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("text")
                        .HasColumnName("contactperson");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("contractdate");

                    b.Property<int>("Course")
                        .HasColumnType("integer")
                        .HasColumnName("course");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<string>("CreditNumber")
                        .HasColumnType("text")
                        .HasColumnName("creditnumber");

                    b.Property<decimal>("CreditSize")
                        .HasColumnType("numeric")
                        .HasColumnName("creditsize");

                    b.Property<int>("CreditType")
                        .HasColumnType("integer")
                        .HasColumnName("credittype");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("EducationType")
                        .HasColumnType("integer")
                        .HasColumnName("educationtype");

                    b.Property<DateTime>("ExpirationDateOfGracePeriod")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expirationdateofgraceperiod");

                    b.Property<string>("FacultyNumber")
                        .HasColumnType("text")
                        .HasColumnName("facultynumber");

                    b.Property<DateTime?>("ForcePaymentDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("forcepaymentdate");

                    b.Property<string>("ForcePaymentInfo")
                        .HasColumnType("text")
                        .HasColumnName("forcepaymentinfo");

                    b.Property<string>("IdNumber")
                        .HasColumnType("text")
                        .HasColumnName("idnumber");

                    b.Property<string>("Institution")
                        .HasColumnType("text")
                        .HasColumnName("institution");

                    b.Property<decimal>("Interest")
                        .HasColumnType("numeric")
                        .HasColumnName("interest");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("numeric")
                        .HasColumnName("monthlypayment");

                    b.Property<string>("Nationality")
                        .HasColumnType("text")
                        .HasColumnName("nationality");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("paymentdate");

                    b.Property<string>("PaymentDescription")
                        .HasColumnType("text")
                        .HasColumnName("paymentdescription");

                    b.Property<int>("PaymentPeriod")
                        .HasColumnType("integer")
                        .HasColumnName("paymentperiod");

                    b.Property<DateTime?>("RecontractionDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("recontractiondate");

                    b.Property<string>("RecontractionInfo")
                        .HasColumnType("text")
                        .HasColumnName("recontractioninfo");

                    b.Property<string>("ResearchArea")
                        .HasColumnType("text")
                        .HasColumnName("researcharea");

                    b.Property<int?>("SchoolRemaining")
                        .HasColumnType("integer")
                        .HasColumnName("schoolremaining");

                    b.Property<decimal>("SemesterTax")
                        .HasColumnType("numeric")
                        .HasColumnName("semestertax");

                    b.Property<string>("Speciality")
                        .HasColumnType("text")
                        .HasColumnName("speciality");

                    b.Property<string>("StudentFullName")
                        .HasColumnType("text")
                        .HasColumnName("studentfullname");

                    b.Property<string>("Uin")
                        .HasColumnType("text")
                        .HasColumnName("uin");

                    b.HasKey("Id");

                    b.HasIndex("AdjournTypeId");

                    b.HasIndex("ApplicationOneTypeId");

                    b.ToTable("applicationone");
                });

            modelBuilder.Entity("StudentCredit.Data.Nomenclatures.AdjournType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("ViewOrder")
                        .HasColumnType("integer")
                        .HasColumnName("vieworder");

                    b.HasKey("Id");

                    b.ToTable("adjourntype");
                });

            modelBuilder.Entity("StudentCredit.Data.Nomenclatures.ApplicationOneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("ViewOrder")
                        .HasColumnType("integer")
                        .HasColumnName("vieworder");

                    b.HasKey("Id");

                    b.ToTable("applicationonetype");
                });

            modelBuilder.Entity("StudentCredit.Data.Applications.ApplicationOne.ApplicationOne", b =>
                {
                    b.HasOne("StudentCredit.Data.Nomenclatures.AdjournType", "AdjournType")
                        .WithMany()
                        .HasForeignKey("AdjournTypeId");

                    b.HasOne("StudentCredit.Data.Nomenclatures.ApplicationOneType", "ApplicationOneType")
                        .WithMany()
                        .HasForeignKey("ApplicationOneTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdjournType");

                    b.Navigation("ApplicationOneType");
                });
#pragma warning restore 612, 618
        }
    }
}
